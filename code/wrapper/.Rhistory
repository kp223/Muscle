meanTensor=attr(Ymod1+Ymod2,"data")
Y=array(rnorm(d1*d2*d3,meanTensor,noise),dim=c(d1,d2,d3))
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 1000)
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
SHOPS_res$betahat[,1:10]
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 500)
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 600)
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 100)
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
SHOPS_res$betahat[,1:10]
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 700)
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
library(Matrix)
library(tidyverse)
library(plot.matrix)
library(rTensor)
library(STATSVD)
library(umap)
library(cluster)
library(reshape2)
library(gtools)
library(spls)
L2norm=function(x){sqrt(sum((x)^2))}
source('/Volumes/GoogleDrive/My Drive/UW-Madison/RA/Literatures/SparseHOPLS/Rcodes/SHOPS_functions.R')
###scHiC
#simulation
n=200#number of cells
p=40#number of genes
q=30
set.seed(1)
H1=rnorm(n,sd = sqrt(25))
H2=rnorm(n,sd = sqrt(25))
H3=rnorm(n,sd = sqrt(25))
X1=matrix(rnorm(n*(p-q)/2,H1,1),nrow=n,ncol=(p-q)/2)
X2=matrix(rnorm(n*length(((p-q)/2+1):(p-q)),H2,1),nrow = n,ncol=length(((p-q)/2+1):(p-q)))
X3=matrix(rnorm(n*length(((p-q)+1):p),H3,1),nrow = n,ncol=length(((p-q)+1):p))
X1 %>% dim
X2 %>% dim
X3 %>% dim
X=cbind(X1,X2,X3)
#plot(X)
#what's done in the paper.
#Y=3*H1-4*H2+rnorm(n)
#
# spls_Res<-spls(X,Y,K=2,eta=0.7)
#
# coef(spls_Res) %>% print
ct=4
d1=40
d2=40
d3=n
signal=10
noise=2
P1=cbind(c(rep(1,d1/ct),rep(0,d1/ct),rep(0,d1/ct),rep(0,d1/ct)),c(rep(0,d1/ct),rep(0,d1/ct),rep(1,d1/ct),rep(0,d1/ct)))
P2=cbind(c(rep(0,d1/ct),rep(1,d1/ct),rep(0,d1/ct),rep(0,d1/ct)),c(rep(0,d1/ct),rep(0,d1/ct),rep(1,d1/ct),rep(0,d1/ct)))
P1=apply(P1,2,function(x)x/L2norm(x))
P2=apply(P2,2,function(x)x/L2norm(x))
G1=array(diag(rep(1*signal,dim(P1)[2])),dim = c(dim(P1)[2],dim(P1)[2],1))
G2=array(diag(rep(1*signal,dim(P2)[2])),dim = c(dim(P2)[2],dim(P2)[2],1))
#This means, Y is going to be only truly associate with X1, X2.
Ymod1=as.tensor(G1) %>% ttm(.,P1,1) %>% ttm(.,P1,2) %>% ttm(.,matrix(H1,nrow = d3),3)
Ymod2=as.tensor(G2) %>% ttm(.,P2,1) %>% ttm(.,P2,2) %>% ttm(.,matrix(H2,nrow = d3),3)
meanTensor=attr(Ymod1+Ymod2,"data")
Y=array(rnorm(d1*d2*d3,meanTensor,noise),dim=c(d1,d2,d3))
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 700)
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
SHOPS_res$betahat[,1:10]
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
SHOPS_res$betahat[,1:10]
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 1000)
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
SHOPS_res$betahat[,1:10]
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 800)
Y[,,1] %>% plot(.,main="data")
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
SHOPS_res$betahat[,1:10]
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 900)
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
SHOPS_res$betahat[,1:10]
L2norm(SHOPS_res$y-X%*%SHOPS_res$betahat)
L2norm(SHOPS_res$y-res$Yhat)
coefplot.spls(SHOPS_res)
library(Matrix)
library(tidyverse)
library(plot.matrix)
library(rTensor)
library(STATSVD)
library(umap)
library(cluster)
library(reshape2)
library(gtools)
library(spls)
L2norm=function(x){sqrt(sum((x)^2))}
source('/Volumes/GoogleDrive/My Drive/UW-Madison/RA/Literatures/SparseHOPLS/Rcodes/SHOPS_functions.R')
###scHiC
#simulation
n=400#number of cells
p=40#number of genes
q=30
set.seed(1)
H1=rnorm(n,sd = sqrt(25))
H2=rnorm(n,sd = sqrt(25))
H3=rnorm(n,sd = sqrt(25))
X1=matrix(rnorm(n*(p-q)/2,H1,1),nrow=n,ncol=(p-q)/2)
X2=matrix(rnorm(n*length(((p-q)/2+1):(p-q)),H2,1),nrow = n,ncol=length(((p-q)/2+1):(p-q)))
X3=matrix(rnorm(n*length(((p-q)+1):p),H3,1),nrow = n,ncol=length(((p-q)+1):p))
X1 %>% dim
X2 %>% dim
X3 %>% dim
X=cbind(X1,X2,X3)
#plot(X)
#what's done in the paper.
#Y=3*H1-4*H2+rnorm(n)
#
# spls_Res<-spls(X,Y,K=2,eta=0.7)
#
# coef(spls_Res) %>% print
ct=4
d1=40
d2=40
d3=n
signal=10
noise=2
P1=cbind(c(rep(1,d1/ct),rep(0,d1/ct),rep(0,d1/ct),rep(0,d1/ct)),c(rep(0,d1/ct),rep(0,d1/ct),rep(1,d1/ct),rep(0,d1/ct)))
P2=cbind(c(rep(0,d1/ct),rep(1,d1/ct),rep(0,d1/ct),rep(0,d1/ct)),c(rep(0,d1/ct),rep(0,d1/ct),rep(1,d1/ct),rep(0,d1/ct)))
P1=apply(P1,2,function(x)x/L2norm(x))
P2=apply(P2,2,function(x)x/L2norm(x))
G1=array(diag(rep(1*signal,dim(P1)[2])),dim = c(dim(P1)[2],dim(P1)[2],1))
G2=array(diag(rep(1*signal,dim(P2)[2])),dim = c(dim(P2)[2],dim(P2)[2],1))
#This means, Y is going to be only truly associate with X1, X2.
Ymod1=as.tensor(G1) %>% ttm(.,P1,1) %>% ttm(.,P1,2) %>% ttm(.,matrix(H1,nrow = d3),3)
Ymod2=as.tensor(G2) %>% ttm(.,P2,1) %>% ttm(.,P2,2) %>% ttm(.,matrix(H2,nrow = d3),3)
meanTensor=attr(Ymod1+Ymod2,"data")
Y=array(rnorm(d1*d2*d3,meanTensor,noise),dim=c(d1,d2,d3))
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 900)
SHOPS_res$betahat[,1:10]
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-X%*%SHOPS_res$betahat)
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-res$Yhat)
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 1300)
SHOPS_res$betahat[,1:10]
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-X%*%SHOPS_res$betahat)
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 2000)
SHOPS_res$betahat[,1:10]
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-X%*%SHOPS_res$betahat)
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-res$Yhat)
set.seed(1)
generate_simulated=function(n,p,q){
H1=rnorm(n,sd = sqrt(25))
H2=rnorm(n,sd = sqrt(25))
H3=rnorm(n,sd = sqrt(25))
X1=matrix(rnorm(n*(p-q)/2,H1,1),nrow=n,ncol=(p-q)/2)
X2=matrix(rnorm(n*length(((p-q)/2+1):(p-q)),H2,1),nrow = n,ncol=length(((p-q)/2+1):(p-q)))
X3=matrix(rnorm(n*length(((p-q)+1):p),H3,1),nrow = n,ncol=length(((p-q)+1):p))
X1 %>% dim
X2 %>% dim
X3 %>% dim
X=cbind(X1,X2,X3)
#plot(X)
#what's done in the paper.
#Y=3*H1-4*H2+rnorm(n)
#
# spls_Res<-spls(X,Y,K=2,eta=0.7)
#
# coef(spls_Res) %>% print
ct=4
d1=40
d2=40
d3=n
signal=10
noise=2
P1=cbind(c(rep(1,d1/ct),rep(0,d1/ct),rep(0,d1/ct),rep(0,d1/ct)),c(rep(0,d1/ct),rep(0,d1/ct),rep(1,d1/ct),rep(0,d1/ct)))
P2=cbind(c(rep(0,d1/ct),rep(1,d1/ct),rep(0,d1/ct),rep(0,d1/ct)),c(rep(0,d1/ct),rep(0,d1/ct),rep(1,d1/ct),rep(0,d1/ct)))
P1=apply(P1,2,function(x)x/L2norm(x))
P2=apply(P2,2,function(x)x/L2norm(x))
G1=array(diag(rep(1*signal,dim(P1)[2])),dim = c(dim(P1)[2],dim(P1)[2],1))
G2=array(diag(rep(1*signal,dim(P2)[2])),dim = c(dim(P2)[2],dim(P2)[2],1))
#This means, Y is going to be only truly associate with X1, X2.
Ymod1=as.tensor(G1) %>% ttm(.,P1,1) %>% ttm(.,P1,2) %>% ttm(.,matrix(H1,nrow = d3),3)
Ymod2=as.tensor(G2) %>% ttm(.,P2,1) %>% ttm(.,P2,2) %>% ttm(.,matrix(H2,nrow = d3),3)
meanTensor=attr(Ymod1+Ymod2,"data")
Y=array(rnorm(d1*d2*d3,meanTensor,noise),dim=c(d1,d2,d3))
return(list(Y=Y,X=X))
}
simulated<-generate_simulated(400,40,30)
simulated<-generate_simulated(400,40,30)
Y=simulated$Y
X=simulated$X
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 2000)
SHOPS_res$betahat[,1:10]
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-X%*%SHOPS_res$betahat)
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-res$Yhat)
simulated<-generate_simulated(400,40,30)
Y=simulated$Y
X=simulated$X
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 2000)
SHOPS_res$betahat[,1:10]
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-X%*%SHOPS_res$betahat)
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-res$Yhat)
c(1:23)
paste0(c(1:23))
paste0(c(1:23),collapse = T)
paste0(c(1:23),collapse =
" ")
paste0(c(1:4238),collapse =  " ")
library(Matrix)
library(tidyverse)
library(plot.matrix)
library(rTensor)
library(STATSVD)
library(umap)
library(cluster)
library(reshape2)
library(gtools)
library(spls)
L2norm=function(x){sqrt(sum((x)^2))}
source('/Volumes/GoogleDrive/My Drive/UW-Madison/RA/SHOPS/Rcodes/SHOPS_functions.R')
###scHiC
#simulation n>p
n=400#number of cells
p=40#number of genes
q=30
d1=20
d2=20
set.seed(1)
simulated<-generate_simulated(n,p,q)
Y=simulated$Y
X=simulated$X
meanTensor=simulated$M
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 2000)
SHOPS_res$betahat[,1:10]
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-X%*%SHOPS_res$betahat)^2/(d1*d2*n)
#7.783975
#coefplot.spls(SHOPS_res)
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-res$Yhat)^2/(d1*d2*n)
#7.827983
#simulation n<p
n=40#number of cells
p=120
#p=80#number of genes
q=80
#q=20
d1=20
d2=20
set.seed(1)
simulated<-generate_simulated(n,p,q)
Y=simulated$Y
X=simulated$X
meanTensor=simulated$M
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 1000)
SHOPS_res$betahat[,1:10]
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated SHOPS")
L2norm(SHOPS_res$y-X%*%SHOPS_res$betahat)^2/(d1*d2*n)
#6.49ish whenever q=20 or 40, given p=80
#6.48ish whenever q=20 or 80, given p=120
#coefplot.spls(SHOPS_res)
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated PLS")
L2norm(SHOPS_res$y-res$Yhat)^2/(d1*d2*n)
#9.948899 if q=40,  7.096623 if q=20, given p=80
#6.8 if q=20,  15.3011 if q=80, given p=120
c(2.3,8,7.5,2.7)/0.16
c(2.3,8,7.5,2.7)/0.1
0.16*3.4+1.6*0.1+0.74*2.2
/Volumes/GoogleDrive/My Drive/UW-Madison/RA/Tensor/Rscripts/For_RECOMB/Muscle_functions.R
?legend()
?foreach
library(foreach)
?foreach
library(MASS)
khatri_rao
?khatri_rao
1+!
1
library(Matrix)
library(tidyverse)
library(plot.matrix)
library(rTensor)
library(STATSVD)
library(umap)
library(cluster)
library(reshape2)
library(gtools)
library(spls)
L2norm=function(x){sqrt(sum((x)^2))}
source('/Volumes/GoogleDrive/My Drive/UW-Madison/RA/SHOPS/Rcodes/SHOPS_functions.R')
#simulation n>p
n=400#number of cells
p=40#number of genes
q=30
d1=20
d2=20
set.seed(1)
simulated<-generate_simulated(n,p,q)
Y=simulated$Y
X=simulated$X
meanTensor=simulated$M
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 2000)
SHOPS_res$betahat[,1:10]
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-X%*%SHOPS_res$betahat)^2/(d1*d2*n)
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated")
L2norm(SHOPS_res$y-res$Yhat)^2/(d1*d2*n)
#simulation n<p
n=40#number of cells
p=120
#p=80#number of genes
q=80
#q=20
d1=20
d2=20
set.seed(1)
simulated<-generate_simulated(n,p,q)
Y=simulated$Y
X=simulated$X
meanTensor=simulated$M
SHOPS_res<-SHOPS(Y,X,K=2,sigma = 1000)
SHOPS_res$betahat[,1:10]
Bhat=fold(SHOPS_res$betahat,1,c(2,3),modes=c(120,20,20))
par(mfrow=c(1,2))
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated SHOPS")
L2norm(SHOPS_res$y-X%*%SHOPS_res$betahat)^2/(d1*d2*n)
res<-HOPLS(Y,X,onlybeta = FALSE,R=2)
meanTensor[,,1] %>% plot(.,main="truth")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated PLS")
L2norm(SHOPS_res$y-res$Yhat)^2/(d1*d2*n)
#9.948899 if q=40,  7.096623 if q=20, given p=80
#9.948899 if q=40,  7.096623 if q=20, given p=80
#6.8 if q=20,  15.3011 if q=80, given p=120
plot(Bhat[1,,])
plot(Bhat@data[1,,])
plot(Bhat@data[1,,])
plot(Bhat@data[81,,])
plot(Bhat@data[1,,])
plot(Bhat@data[2,,])
plot(Bhat@data[35,,])
plot(Bhat@data[1,,])
plot(Bhat@data[35,,])
mfrow(c(2,2))
par(mfrow=c(2,2))
plot(Bhat@data[1,,])
plot(Bhat@data[21,,])
plot(Bhat@data[81,,])
plot(Bhat@data[100,,])
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated SHOPS")
par(mfrow=c(2,3))
Y[,,1] %>% plot(.,main="data")
meanTensor[,,1] %>% plot(.,main="truth")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated SHOPS")
Y[,,1] %>% plot(.,main="data[1,,]")
meanTensor[,,1] %>% plot(.,main="truth[1,,]")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated SHOPS[1,,]")
Y[,,1] %>% plot(.,main="data[1,,]")
meanTensor[,,1] %>% plot(.,main="truth[1,,]")
matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated SHOPS[1,,]")
Y[,,1] %>% plot(.,main="data[1,,]")
meanTensor[,,1] %>% plot(.,main="truth[1,,]")
matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated PLS[1,,]")
-Y[,,1] %>% plot(.,main="data[1,,]")
-meanTensor[,,1] %>% plot(.,main="truth[1,,]")
-matrix((X%*%SHOPS_res$betahat)[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated SHOPS[1,,]")
-Y[,,1] %>% plot(.,main="data[1,,]")
-meanTensor[,,1] %>% plot(.,main="truth[1,,]")
-matrix(res$Yhat[1,],ncol=d1,nrow=d2) %>% plot(.,main="estimated PLS[1,,]")
library(spls)
?spls
data(yeast)
yeast %>% str
setwd("/Volumes/GoogleDrive/My Drive/UW-Madison/RA/Tensor/Muscle/data")
install.packages('pacman')
library(pacman)
source("config_file_model.R")
#
# ######
#
# dir=as.character(args[1])
# Rank=as.numeric(args[2])
# modality=as.character(args[3])
# chr_num=as.numeric(args[4])
# Bulk_exist=as.logical(args[5])
# tol=as.numeric(args[6])
# maxiter=as.numeric(args[7])
getwd()
#
# ######
#
# dir=as.character(args[1])
# Rank=as.numeric(args[2])
# modality=as.character(args[3])
# chr_num=as.numeric(args[4])
# Bulk_exist=as.logical(args[5])
# tol=as.numeric(args[6])
# maxiter=as.numeric(args[7])
getwd('/Users/kwangmoonpark/Muscle/code/wrapper/')
#
# ######
#
# dir=as.character(args[1])
# Rank=as.numeric(args[2])
# modality=as.character(args[3])
# chr_num=as.numeric(args[4])
# Bulk_exist=as.logical(args[5])
# tol=as.numeric(args[6])
# maxiter=as.numeric(args[7])
setwd('/Users/kwangmoonpark/Muscle/code/wrapper/')
source("config_file_model.R")
pacman::p_load(RColorBrewer,MASS,Matrix,dplyr,cluster,rTensor,reshape2,Rcpp,foreach,inline,parallel,doParallel,RSpectra,qs)
pacman::p_load(Rcpp,RSpectra,qs,RColorBrewer)
source(paste0(dir_functions,'/Muscle_functions.R'))
invisible(capture.output(sourceCpp(paste0(dir_functions,'/multiply.cpp')), type = "message"))
invisible(capture.output(sourceCpp(paste0(dir_functions,'/multiply.cpp')), type = "message"))
lib.path
.libPaths()
invisible(capture.output(sourceCpp(paste0(dir_functions,'/multiply.cpp')), type = "message"))
invisible(capture.output(sourceCpp(paste0(dir_functions,'/multiply.cpp')), type = "message"))
multiply(as(1,"sparseMatrix"),as(1,"sparseMatrix"))
source("config_file_preprocess.R")
if(GNU!=TRUE){
for(chr in 1:chr_num){
system(paste0('cd ',dir_functions,"; Rscript --vanilla tensor_generator.R ",chr,' ',dir_data,dir_functions,chr_num,sizefile));return(readRDS(paste0(outname,chr,'_modeA_res.rds')))
}
}
dir_data
if(GNU!=TRUE){
for(chr in 1:chr_num){
system(paste0('cd ',dir_functions,"; Rscript --vanilla tensor_generator.R ",chr,' ',dir_data,dir_functions,chr_num,sizefile));return(readRDS(paste0(outname,chr,'_modeA_res.rds')))
}
}
if(GNU!=TRUE){
for(chr in 1:chr_num){
system(paste0('cd ',dir_functions,"; Rscript --vanilla tensor_generator.R ",chr,' ',dir_data,dir_functions,chr_num,sizefile));return(readRDS(paste0(outname,chr,'_modeA_res.rds')))
}
}
if(GNU!=TRUE){
for(chr in 1:chr_num){
system(paste0('cd ',dir_functions,"; Rscript --vanilla tensor_generator.R ",chr,' ',dir_data,dir_functions,chr_num,sizefile));return(readRDS(paste0(outname,chr,'_modeA_res.rds')))
}
}
cat("Please specify the rank value based on the singular value 'svd_plot.pdf' and hit enter (skipping will give rank=30) : ")
